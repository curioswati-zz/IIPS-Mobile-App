{
  "name": "sequelize-restful",
  "version": "0.4.3",
  "description": "A connect module that adds a restful API for all defined models to your application.",
  "main": "lib/index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sequelize/sequelize-restful.git"
  },
  "author": "",
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "lodash": "~1.0.0-rc.3",
    "connect": "~2.7.2"
  },
  "devDependencies": {
    "mocha": "~1.17.0",
    "sequelize": "1.7.0-rc2",
    "sqlite3": "~3.0.0",
    "mysql": "2.0.1",
    "expect.js": "~0.2.0"
  },
  "readme": "# sequelize-restful [![Build Status](https://secure.travis-ci.org/sequelize/sequelize-restful.png)](http://travis-ci.org/sequelize/sequelize-restful)\n\nA connect module based on a fork of sequelize-restful that adds a one level of associative capability to a restful API. It also lets you define which model should be exposed through this restful API.\n\n## Unmaintained\n\nThis project is not actively developed/maintained. As a result of that, you won't be able to create issues any longer. I will happily merge pull requests, though. Please consider using [epilogue](https://github.com/dchester/epilogue).\n\n## Usage\n\n```js\nvar express   = require('express')\n  , Sequelize = require('sequelize')\n  , http      = require('http')\n  , restful   = require('sequelize-restful')\n  , sequelize = new Sequelize('database', 'username', 'password')\n  , app       = express()\n\n// define all your models before the configure block\n\napp.configure(function() {\n  app.use(restful(sequelize, { /* options */ }))\n})\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'))\n})\n```\n\n## Options\n\n```js\n{\n  // Parameter:   endpoint\n  // Description: Define the path to the restful API.\n  // Default:     '/api'\n\n  endpoint: '/restful',\n\n  // Parameter:   allowed\n  // Description: Define which models will be exposed through the restful API\n  // Default:     'new Array()' if it is an Empty array, all the models will be exposed by default\n\n  allowed: new Array('Model0', 'Model1', 'Model2')\n}\n```\n\n## The API\n\n### GET /api\n\nReturns a list of all declared models\n\n```console\n$ curl http://localhost:3000/api\n```\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"name\": \"Tag\",\n      \"tableName\": \"Tags\"\n    },\n    {\n      \"name\": \"Image\",\n      \"tableName\": \"Images\"\n    },\n    {\n      \"name\": \"Project\",\n      \"tableName\": \"Projects\"\n    }\n  ]\n}\n```\n\n### HEAD /api/Tags\n\nReturns a description of a declared model\n\n```console\n$ curl -i -X HEAD http://localhost:3000/api/Tags\n```\n\nThe result of the request is part of the response headers! The header's name is `Sequelize-Admin`.\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"name\": \"Tag\",\n    \"tableName\": \"Tags\",\n    \"attributes\": {\n      \"title\": \"VARCHAR(255)\",\n      \"id\": {\n        \"type\": \"INTEGER\",\n        \"allowNull\": false,\n        \"primaryKey\": true,\n        \"autoIncrement\": true\n      },\n      \"createdAt\": {\n        \"type\": \"DATETIME\",\n        \"allowNull\": false\n      },\n      \"updatedAt\": {\n        \"type\": \"DATETIME\",\n        \"allowNull\": false\n      },\n      \"ProjectId\": {\n        \"type\": \"INTEGER\"\n      }\n    }\n  }\n}\n```\n\n### GET /api/Tags/1\n\nReturns the data of the Tag with the id 1.\n\n```console\n$ curl http://localhost:3000/api/Tags/1\n```\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"title\": \"foo\",\n    \"id\": 1,\n    \"createdAt\": \"2013-02-09T09:48:14.000Z\",\n    \"updatedAt\": \"2013-02-09T09:48:14.000Z\",\n    \"ProjectId\": 1\n  }\n}\n```\n\n### POST /api/Tags\n\nCreating a new instance of a model\n\n```console\ncurl -d \"title=hallo%20world\" http://localhost:3000/api/Tags\n```\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"title\": \"hallo world\",\n    \"id\": 1,\n    \"createdAt\": \"2013-02-09T09:48:14.000Z\",\n    \"updatedAt\": \"2013-02-09T09:48:14.000Z\"\n  }\n}\n```\n\n### PUT /api/Tags/1\n\nUpdating an already existing instance of a model\n\n```console\ncurl -d \"title=fnord\" -X PUT http://localhost:3000/api/Tags/1\n```\n\nIt returns the updated record\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"title\": \"fnord\",\n    \"id\": 1,\n    \"createdAt\": \"2013-02-14T19:52:04.000Z\",\n    \"updatedAt\": \"2013-02-14T19:53:30.066Z\",\n    \"ProjectId\": 1\n  }\n}\n```\n\n### PATCH /api/Tags/1\n\nUpdating an already existing instance of a model\n\n```console\ncurl -d \"title=fnord\" -X PATCH http://localhost:3000/api/Tags/1\n```\n\nIs processed and returns updated record equivalent to [PUT /api/Tags/1](#put-apitags1).\n\n\n### DELETE /api/Tags/1\n\nDeleting an existing instance of a model\n\n```console\ncurl -i -X DELETE http://localhost:3000/admin/api/Tags/3\n```\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": {}\n}\n```\n\n## The API for Associations\n\n### GET /api/Projects/1/Tags\n\nReturns all the instance of 'associated_dao_factory' associated to the instance 1 of 'dao_factory'\n\n```console\ncurl -i -X GET http://localhost:3000/admin/api/Projects/1/Tags\n\n```\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"title\": \"foo\",\n    \"id\": 1,\n    \"createdAt\": \"2013-02-09T09:48:14.000Z\",\n    \"updatedAt\": \"2013-02-09T09:48:14.000Z\",\n    \"ProjectId\": 1\n  }\n}\n```\n\n### DELETE /api/Photo/1/Photographer\n\nDeleting an existing association for 1:1 or N:1 association.\n\n```console\ncurl -i -X DELETE http://localhost:3000/admin/api/Photo/1/Photographer\n```\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": {}\n}\n```\n\n### DELETE /api/Projects/1/Tags/1\n\nDeleting an existing association between instances\n\n```console\ncurl -i -X DELETE http://localhost:3000/admin/api/Projects/1/Tags/3\n```\n\n```js\n{\n  \"status\": \"success\",\n  \"data\": {}\n}\n```\n",
  "bugs": {
    "url": "https://github.com/sequelize/sequelize-restful/issues"
  },
  "_id": "sequelize-restful@0.4.3",
  "_from": "sequelize-restful@"
}
